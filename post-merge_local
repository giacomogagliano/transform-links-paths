#!/bin/sh

# Ottieni il path degli script da fare andare dopo un merge
RED='\033[0;31m'
NC='\033[0m'
FILE=.env
if [ -f "$FILE" ]; then
  source $FILE
  echo $TRANSFORM_LINKS_PATHS_DIR
else
  echo "${RED}>>>>___ATTENZIONE___<<<<${NC} Arianna!!!!\nIl file $FILE non esiste. Copia il path della cartella contenente gli script post-merge in un file .env nella cartella $PWD"
  exit 1
fi

# Ottieni l'ultimo messaggio di commit
last_commit_message=$(git log -1 --pretty=%B)
# recupera il nome del branch che si sta mergiando
branch=$(echo $GIT_REFLOG_ACTION | awk '{print $2}')
activebranch=$(git rev-parse --abbrev-ref HEAD)
if [ -z "$branch" ]; then
  # Se Ã¨ vuota, assegna il valore "default"
  branch="remoto"
fi
activebranch=$(git rev-parse --abbrev-ref HEAD)
# Controlla se ci troviamo sul branch 'main'
echo "si sta mergiando il branch $branch su $activebranch"
if [[ $branch = "remoto" ]]; then
  echo non faremo nulla
  exit 1
fi
if [[ $activebranch = "main" ]]; then
  echo faremo andare lo script che cambia da git/\<dominio\>/\*\*/\* a assets/\*\*/\*
  bun $TRANSFORM_LINKS_PATHS_DIR $branch $activebranch
  echo i path sono stati cambiati con successo
  git add .
  git commit -m "post-merge: cambiati i path dei link"
else
  if [[ $branch = "main" ]]; then
    echo faremo andare lo script che cambia da assets/\*\*/\* a git/\<dominio\>/\*\*/\*
    bun $TRANSFORM_LINKS_PATHS_DIR $branch $activebranch
    echo i path sono stati cambiati con successo
    git add .
    git commit -m "post-merge: cambiati i path dei link"
  fi
fi
